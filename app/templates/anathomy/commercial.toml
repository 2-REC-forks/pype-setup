'''
description:
  - all keys which are in <> are optional - if they are not in dict(data) then they are ignored
  - all capital keys {ENV_VAR} are computed first and eather coming from outside or inside

keys comming from outside:
  {PYPE_STUDIO_PROJECTS_WORK}: str, referencing template env-var from `system/__locations__.toml`
  {AVALON_PROJECT}: str, name of folder used for project
  {project.code}: str, shorter version of project name if longer then 8 letters
  {AVALON_SILO}: str, env-variable example: asset, film
  {sequence}: str, example: sq001, 30s, 15s_en
  {shot}: str, example: sh0010, shot_010
  {asset}: str, example: blue-car, dragone
  {item}: str, example: Nuke>Write1,Precomp1; Maya>beauty,diffuse
  {subset}: str, instance of asset object; example: Maya>Bruce_01, Nuke>Environment_precomp_01
  {version}: int, example: 14
  {representation}: str, example: abc, ma, nk, exr, png, curves, history, metadata
  {padding:0>6}: int, number of frame from image sequence, example: 000012

todo:
  - {project.code}: need to be added to schema:project-2.0.json
  - {sequence}: i am not sure how is it in shema?
  - {shot}: i am not sure how is it in shema?
  - {item}: i am not sure how is it in shema?
  - {subversion}: how could we implement it with avalon.api
  - {padding:0>6}: need to be careful because every app is referencing padding differently
'''

PYPE_CONTEXT_CODE = "<{sequence}><_{shot}><_{asset}><_{item}>"
PYPE_CONTEXT_PATH = "<{sequence}></{shot}></{asset}></{item}>"


[version]
  main = "v{version:0>2}"
  sub = "<_{subversion:0>3}>"

# [raw] # if davinci is connected this will make sense

# [plates] # nukestudio/resolve will need this for exporting source lates in layers as shot assets

[work]
  root = "{PYPE_STUDIO_PROJECTS_WORK}"
  file = "{project.code}_{PYPE_CONTEXT_CODE}<_{subset}>_{version.main}{version.sub}.{representation}"
  path = "{work.root}/{project.code}/{AVALON_SILO}/{PYPE_CONTEXT_PATH}/work/{AVALON_TASK}/{AVALON_APP}"

[render]
  root = "{PYPE_STUDIO_PROJECTS_RENDER}"
  file = "{project.code}_{PYPE_CONTEXT_CODE}<_{subset}>_{version.main}{version.sub}<.{padding:0>6}>.{representation}"
  path = "{render.root}/{AVALON_PROJECT}/{AVALON_SILO}/{PYPE_CONTEXT_PATH}/work/{AVALON_TASK}/render</{subset}></{version.main}>/{render.file}"

[publish]
  root = "{PYPE_STUDIO_PROJECTS_PUBLISH}"
  file = "{project.code}_{PYPE_CONTEXT_CODE}<_{subset}>_{version.main}<.{padding:0>6}>.{representation}"
  path = "{publish.root}/{AVALON_PROJECT}/{AVALON_SILO}/{PYPE_CONTEXT_PATH}/work/{AVALON_TASK}/publish</{subset}></{version.main}>/{representation}/{publish.file}"
